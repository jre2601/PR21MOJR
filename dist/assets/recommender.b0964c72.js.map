{"version":3,"file":"recommender.b0964c72.js","sources":["../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/style/TextPlacement.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/render/canvas/BuilderType.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/style/IconAnchorUnits.js","../../node_modules/ol/style/IconOrigin.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/layer/Vector.js","../../recommenderSystem.js"],"sourcesContent":["/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        switch (type) {\n            case GeometryType.MULTI_POLYGON:\n                flatCoordinates =\n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n                builderEndss = [];\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                offset = 0;\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    var myEnds = [];\n                    offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                    builderEndss.push(myEnds);\n                }\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                break;\n            case GeometryType.POLYGON:\n            case GeometryType.MULTI_LINE_STRING:\n                builderEnds = [];\n                flatCoordinates =\n                    type == GeometryType.POLYGON\n                        ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                        : geometry.getFlatCoordinates();\n                offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n                /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    renderer,\n                    inflateCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinatesArray,\n                ]);\n                break;\n            case GeometryType.LINE_STRING:\n            case GeometryType.CIRCLE:\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinates,\n                ]);\n                break;\n            case GeometryType.MULTI_POINT:\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n                if (builderEnd > builderBegin) {\n                    this.instructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        renderer,\n                        inflateCoordinates,\n                    ]);\n                    this.hitDetectionInstructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        hitDetectionRenderer || renderer,\n                        inflateCoordinates,\n                    ]);\n                }\n                break;\n            case GeometryType.POINT:\n                flatCoordinates = geometry.getFlatCoordinates();\n                this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n                builderEnd = this.coordinates.length;\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                ]);\n                break;\n            default:\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0] * this.imagePixelRatio_;\n        this.originY_ = origin[1] * this.imagePixelRatio_;\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultLineDash, defaultLineDashOffset } from '../canvas.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            defaultLineDash,\n            defaultLineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string|Array<string>}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == GeometryType.LINE_STRING ||\n                geometryType == GeometryType.MULTI_LINE_STRING ||\n                geometryType == GeometryType.POLYGON ||\n                geometryType == GeometryType.MULTI_POLYGON)) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = \n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            if (geometryWidths &&\n                (end - begin) / 2 !== flatCoordinates.length / stride) {\n                var beg_1 = begin / 2;\n                geometryWidths = geometryWidths.filter(function (w, i) {\n                    var keep = coordinates[(beg_1 + i) * 2] === flatCoordinates[i * stride] &&\n                        coordinates[(beg_1 + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n                    if (!keep) {\n                        --beg_1;\n                    }\n                    return keep;\n                });\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var x1 = 0;\n    var y1 = 0;\n    var segmentLength = 0;\n    var segmentM = 0;\n    function advance() {\n        x1 = x2;\n        y1 = y2;\n        offset += stride;\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        segmentM += segmentLength;\n        segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    do {\n        advance();\n    } while (offset < end - stride && segmentM + segmentLength < startM);\n    var interpolate = segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n    var beginX = lerp(x1, x2, interpolate);\n    var beginY = lerp(y1, y2, interpolate);\n    var startOffset = offset - stride;\n    var startLength = segmentM;\n    var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n    while (offset < end - stride && segmentM + segmentLength < endM) {\n        advance();\n    }\n    interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n    var endX = lerp(x1, x2, interpolate);\n    var endY = lerp(y1, y2, interpolate);\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var flat = [beginX, beginY, endX, endY];\n        rotate(flat, 0, 4, 2, rotation, flat, flat);\n        reverse = flat[0] > flat[2];\n    }\n    else {\n        reverse = beginX > endX;\n    }\n    var PI = Math.PI;\n    var result = [];\n    var singleSegment = startOffset + stride === offset;\n    offset = startOffset;\n    segmentLength = 0;\n    segmentM = startLength;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    var previousAngle;\n    // All on the same segment\n    if (singleSegment) {\n        advance();\n        previousAngle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            previousAngle += previousAngle > 0 ? -PI : PI;\n        }\n        var x = (endX + beginX) / 2;\n        var y = (endY + beginY) / 2;\n        result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n        return result;\n    }\n    for (var i = 0, ii = text.length; i < ii;) {\n        advance();\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -PI : PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var iStart = i;\n        var charLength = 0;\n        for (; i < ii; ++i) {\n            var index = reverse ? ii - i - 1 : i;\n            var len = scale * measureAndCacheTextWidth(font, text[index], cache);\n            if (offset + stride < end &&\n                segmentM + segmentLength < startM + charLength + len / 2) {\n                break;\n            }\n            charLength += len;\n        }\n        if (i === iStart) {\n            continue;\n        }\n        var chars = reverse\n            ? text.substring(ii - iStart, ii - i)\n            : text.substring(iStart, i);\n        interpolate =\n            segmentLength === 0\n                ? 0\n                : (startM + charLength / 2 - segmentM) / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result.push([x, y, charLength / 2, angle, chars]);\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextAlign, defaultTextBaseline, drawImageOrLabel, getTextDimensions, measureAndCacheTextWidth, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n    if (i > 0) {\n        acc.push('\\n', '');\n    }\n    acc.push(line, '');\n    return acc;\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string|Array<string>} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var textIsArray = Array.isArray(text);\n        var align = horizontalTextAlign(textIsArray ? text[0] : text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var chunks = textIsArray\n            ? text\n            : text.split('\\n').reduce(createTextChunks, []);\n        var _a = getTextDimensions(textState, chunks), width = _a.width, height = _a.height, widths = _a.widths, heights = _a.heights, lineWidths = _a.lineWidths;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var strokeInstructions = [];\n        var fillInstructions = [];\n        var lineHeight = 0;\n        var lineOffset = 0;\n        var widthHeightIndex = 0;\n        var lineWidthIndex = 0;\n        var previousFont;\n        for (var i = 0, ii = chunks.length; i < ii; i += 2) {\n            var text_1 = chunks[i];\n            if (text_1 === '\\n') {\n                lineOffset += lineHeight;\n                lineHeight = 0;\n                x = align * renderWidth + leftRight * strokeWidth;\n                ++lineWidthIndex;\n                continue;\n            }\n            var font = chunks[i + 1] || textState.font;\n            if (font !== previousFont) {\n                if (strokeKey) {\n                    strokeInstructions.push('font', font);\n                }\n                if (fillKey) {\n                    fillInstructions.push('font', font);\n                }\n                previousFont = font;\n            }\n            lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n            var fillStrokeArgs = [\n                text_1,\n                x +\n                    leftRight * widths[widthHeightIndex] +\n                    align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n                0.5 * (strokeWidth + lineHeight) + lineOffset,\n            ];\n            x += widths[widthHeightIndex];\n            if (strokeKey) {\n                strokeInstructions.push('strokeText', fillStrokeArgs);\n            }\n            if (fillKey) {\n                fillInstructions.push('fillText', fillStrokeArgs);\n            }\n            ++widthHeightIndex;\n        }\n        Array.prototype.push.apply(contextInstructions, strokeInstructions);\n        Array.prototype.push.apply(contextInstructions, fillInstructions);\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string|Array<string>} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(Array.isArray(text) ? text[0] : text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = \n                    /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image =\n                        /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterImageWithText = \n                    /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        var imageArgs = void 0;\n                        var imageDeclutterBox = void 0;\n                        if (opt_declutterTree && declutterImageWithText) {\n                            var index = dd - d;\n                            if (!declutterImageWithText[index]) {\n                                // We now have the image for an image+text combination.\n                                declutterImageWithText[index] = args;\n                                // Don't render anything for now, wait for the text.\n                                continue;\n                            }\n                            imageArgs = declutterImageWithText[index];\n                            delete declutterImageWithText[index];\n                            imageDeclutterBox = getDeclutterBox(imageArgs);\n                            if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                continue;\n                            }\n                        }\n                        if (opt_declutterTree &&\n                            opt_declutterTree.collides(dimensions.declutterBox)) {\n                            continue;\n                        }\n                        if (imageArgs) {\n                            // We now have image and text for an image+text combination.\n                            if (opt_declutterTree) {\n                                opt_declutterTree.insert(imageDeclutterBox);\n                            }\n                            // Render the image before we render the text.\n                            this.replayImageOrLabel_.apply(this, imageArgs);\n                        }\n                        if (opt_declutterTree) {\n                            opt_declutterTree.insert(dimensions.declutterBox);\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle =\n                        /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceed that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number} [opt_renderBuffer] Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== BuilderType.IMAGE &&\n                            builderType !== BuilderType.TEXT) ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry =\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var _this = this;\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            var lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash\n                : defaultLineDash;\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: this.pixelRatio_ === 1\n                    ? lineDash\n                    : lineDash.map(function (n) { return n * _this.pixelRatio_; }),\n                lineDashOffset: (strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset) * this.pixelRatio_,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: (strokeStyleWidth !== undefined\n                    ? strokeStyleWidth\n                    : defaultLineWidth) * this.pixelRatio_,\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        var imageSize;\n        if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n            this.image_ = null;\n            return;\n        }\n        var imageAnchor = imageStyle.getAnchor();\n        var imageOrigin = imageStyle.getOrigin();\n        this.image_ = imageStyle.getImage(this.pixelRatio_);\n        this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n        this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n        this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = imageStyle.getScaleArray();\n        this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ =\n                textText !== undefined\n                    ? Array.isArray(textText)\n                        ? textText.reduce(function (acc, t, i) { return (acc += i % 2 ? ' ' : t); }, '')\n                        : textText\n                    : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ ||\n            this.canvas_[pixelRatio] ||\n            this.imageState_ !== ImageState.LOADED) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size|undefined}\n         */\n        _this.imgSize_ = options.imgSize;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && _this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), _this.imgSize_ !== undefined ? _this.imgSize_ : null, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            crossOrigin: this.crossOrigin_,\n            imgSize: this.imgSize_,\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            opacity: this.getOpacity(),\n            rotateWithView: this.getRotateWithView(),\n            rotation: this.getRotation(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            src: this.getSrc(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        var anchor = this.normalizedAnchor_;\n        if (!anchor) {\n            anchor = this.anchor_;\n            var size = this.getSize();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n                this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                if (!size) {\n                    return null;\n                }\n                anchor = this.anchor_.slice();\n                if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[0] *= size[0];\n                }\n                if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[1] *= size[1];\n                }\n            }\n            if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n                if (!size) {\n                    return null;\n                }\n                if (anchor === this.anchor_) {\n                    anchor = this.anchor_.slice();\n                }\n                if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[0] = -anchor[0] + size[0];\n                }\n                if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[1] = -anchor[1] + size[1];\n                }\n            }\n            this.normalizedAnchor_ = anchor;\n        }\n        var displacement = this.getDisplacement();\n        return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ratio of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { clamp } from '../../math.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nexport var HIT_DETECT_RESOLUTION = 0.5;\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] * HIT_DETECT_RESOLUTION;\n    var height = size[1] * HIT_DETECT_RESOLUTION;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, HIT_DETECT_RESOLUTION, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var geometry = originalStyle.getGeometryFunction()(feature);\n            if (!geometry || !intersects(extent, geometry.getExtent())) {\n                continue;\n            }\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n                stroke.setLineDash(null);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image && image.getOpacity() !== 0) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var imgContext = createCanvasContext2D(imgSize[0], imgSize[1], undefined, { alpha: false });\n                var img = imgContext.canvas;\n                imgContext.fillStyle = color;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    opacity: 1,\n                    size: image.getSize(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = style.getZIndex() || 0;\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n        var y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n        // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n        // for browsers returning coordinates slightly larger than the actual canvas size\n        // due to a non-integer pixel ratio.\n        var index = (clamp(x, 0, imageData.width - 1) +\n            clamp(y, 0, imageData.height - 1) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = \n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer(), style.getHitDetectionRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { HIT_DETECT_RESOLUTION, createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { cssOpacity } from '../../css.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { equals } from '../../array.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, toUserResolution, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.wrappedRenderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.context;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity, this.getBackground(frameState));\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            return null;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        if (render) {\n            this.renderWorlds(replayGroup, frameState);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = cssOpacity(layerState.opacity);\n        var container = this.container;\n        if (opacity !== container.style.opacity) {\n            container.style.opacity = opacity;\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.wrappedRenderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] * HIT_DETECT_RESOLUTION;\n                var height = size[1] * HIT_DETECT_RESOLUTION;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup &&\n                frameState.declutterTree\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var renderedExtent = extent.slice();\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.wrappedRenderedExtent_, extent)) {\n            if (!equals(this.renderedExtent_, renderedExtent)) {\n                this.hitDetectionImageData_ = null;\n                this.renderedExtent_ = renderedExtent;\n            }\n            this.renderedCenter_ = center;\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                var extent_1 = loadExtents[i];\n                var userExtent_1 = toUserExtent(extent_1, projection);\n                vectorSource.loadFeatures(userExtent_1, toUserResolution(resolution, projection), userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = renderedExtent;\n        this.wrappedRenderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","import './style.css';\nimport {\n    Feature,\n    Map,\n    View,\n} from 'ol';\nimport OSM from 'ol/source/OSM';\nimport VectorSource from 'ol/source/Vector';\nimport Overlay from 'ol/Overlay';\nimport Point from 'ol/geom/Point';\nimport {\n    fromLonLat,\n    useGeographic\n} from 'ol/proj';\nimport {\n    Heatmap as HeatmapLayer,\n    Tile as TileLayer,\n    Vector as VectorLayer\n} from 'ol/layer';\nimport {Icon, Style} from 'ol/style';\n\nuseGeographic();\n\n\n\n// All parkings as features\nlet iconFeatures = [];\n\nconst parkingCoords = [\n    [14.517521, 46.039284, \"Dolenjska cesta (Strelisce)\"],\n    [14.508285, 46.062497, \"Bezigrad\"],\n    [14.514254, 46.087035, \"BS4/ I\"],\n    [14.514251, 46.086728, \"BS4/ II\"],\n    [14.518000, 46.074537, \"Gosarjeva ulica\"],\n    [14.515989, 46.074583, \"Gosarjeva ulica II.\"],\n    [14.510116, 46.061856, \"Gospodarsko razstavisce\"],\n    // [14.513173, 46.088353, \"Komanova ulica\"],\n    [14.503415, 46.050617, \"PH Kongresni trg\"],\n    [14.504961, 46.056943, \"Kozolec\"],\n    [14.522073, 46.070205, \"Kranjceva ulica\"],\n    [14.509180, 46.063127, \"Linhartova\"],\n    [14.516126, 46.056973, \"Metelkova ulica\"],\n    [14.494343, 46.046584, \"Mirje\"],\n    [14.501974, 46.046687, \"NUK II.\"],\n    //[14.499581, 46.026924, \"P+R Barje\"],\n    //[14.463085, 46.036492, \"P+R Dolgi most\"],\n    //[14.568027, 46.054279, \"P+R Studenec\"],\n    [14.493818, 46.042360, \"PH Kolezija\"],\n    [14.511568, 46.052130, \"Petkovskovo nabrezje II.\"],\n    [14.582565, 46.054942, \"Pokopalisce Polje\"],\n    [14.529375, 46.051250, \"Povsetova ulica\"],\n    [14.508596, 46.053622, \"Senatorij Emona\"],\n    [14.507321, 46.088504, \"Slovenceva ulica\"],\n    [14.500366, 46.056411, \"Tivoli I.\"],\n    [14.497231, 46.059912, \"Tivoli II.\"],\n    [14.495670, 46.046982, \"Trg mladinskih delovnih brigad\"],\n    [14.488943, 46.068388, \"Trg prekomorskih brigad\"],\n    // [14.515946, 46.078370, \"Stembalova ulica\"],\n    [14.528873, 46.068968, \"Zale I.\"],\n    [14.528680, 46.067131, \"Zale II.\"],\n    [14.526062, 46.067969, \"Zale III.\"],\n    [14.526815, 46.069497, \"Zale IV.\"],\n    [14.531361, 46.074782, \"Zale V.\"],\n]\n\nconst iconStyle = new Style({\n    image: new Icon({\n        anchor: [0.5, 1],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'fraction',\n        src: 'location.svg',\n        scale: [0.07, 0.07],\n    })\n});\n\nparkingCoords.forEach(parking => {\n    let feature = new Feature({\n        name: parking[2],\n        geometry: new Point([parking[0], parking[1]]),\n        /*population: 4000,\n        rainfall: 500,*/\n    });\n    feature.setStyle(iconStyle);\n    iconFeatures.push(feature);\n});\n\nconst raster = new TileLayer({\n    source: new OSM(),\n});\n\n  \nconst vectorLayer = new VectorLayer({\n    source: new VectorSource({\n        features: iconFeatures,\n    })\n});\n\n\nconst map = new Map({\n    layers: [raster, vectorLayer],\n    target: 'map',\n    view: new View({\n        center: [14.505751, 46.056946],\n        zoom: 13,\n    }),\n});\n\nmap.on('singleclick', function (e) {\n    console.log(e.coordinate);\n    Swal.fire({\n        title: '<h1>Priporočilni sistem</h1><br>',\n        html:\n            `\n            <div class=\"recommenderModal\">\n                Koordinate cilja: <b>${e.coordinate[0].toFixed(4)}</b> - <b>${e.coordinate[1].toFixed(4)}</b><br>\n                Datum prihoda: <input style=\"top: 0px;\" type=\"text\" name=\"daterange\" value=\"\" /><br>\n            </div>\n          `,\n        showCloseButton: true,\n        showCancelButton: true,\n        focusConfirm: false,\n        showLoaderOnConfirm: true,\n        confirmButtonText:\n          '<i class=\"fa fa-thumbs-up\"></i> Potrdi',\n        cancelButtonText:\n          '<i class=\"fa fa-thumbs-down\"></i> Prekliči',\n    }).then((result) => {\n        if (result.isConfirmed) {\n\n            let postResult = {};\n            console.log($('input[name=\"daterange\"]').val());\n           \n            $.ajax({\n                url: 'getRecommendation',\n                dataType: 'json',\n                type: 'post',\n                contentType: 'application/json',\n                data: JSON.stringify( {\n                    x: e.coordinate[0],\n                    y: e.coordinate[1],\n                    date: $('input[name=\"daterange\"]').val(),\n                } ),\n                processData: false,\n                success: function( data, textStatus, jQxhr ){\n                    console.log(data);\n                    postResult = data;\n                    iconFeatures.forEach(f => { f.setStyle(iconStyle); });\n                    iconFeatures.forEach(f => {\n                        if (f.getProperties().name == postResult) {\n                            f.setStyle(new Style({\n                             image: new Icon({\n                                 anchor: [0.5, 1],\n                                 anchorXUnits: 'fraction',\n                                 anchorYUnits: 'fraction',\n                                 src: 'location_recommended.svg',\n                                 scale: [0.12, 0.12],\n                             })\n                         }));\n                        }\n                     });\n                },\n                error: function( jqXhr, textStatus, errorThrown ){\n                    console.log( errorThrown );\n                }\n            }).then(() => {\n                \n                Swal.fire({\n                    title: '<h1>Priporočeno parkirišče:</h1><br>',\n                    html:\n                        `\n                        <h2>${postResult}</h2>\n                        <div class=\"recommenderModal\">\n                        </div>\n                      `,\n                    showCloseButton: true,\n                    showCancelButton: false,\n                    focusConfirm: true,\n                    confirmButtonText:\n                      '<i class=\"fa fa-thumbs-up\"></i> Izhod',\n                })\n            });\n        }\n    });\n    \n    // Datepicker setup\n    $('input[name=\"daterange\"]').daterangepicker({\n        \"singleDatePicker\": true,\n        locale: {\n            format: 'DD/MM/YYYY'\n        },\n    });\n   \n});\n\n\n// Change mouse cursor when over marker\n/*map.on('pointermove', function (e) {\n  const pixel = map.getEventPixel(e.originalEvent);\n  const hit = map.hasFeatureAtPixel(pixel);\n  map.getTarget().style.cursor = hit ? 'pointer' : '';\n});*/\n\n// Close the popup when the map is moved\nmap.on('movestart', function () {\n  // $(element).popover('dispose');\n  // Close overlay\n});\n\n// Clear recommendation\n$(\"#clearRec\").click(() => {\n    iconFeatures.forEach(f => {\n        f.setStyle(iconStyle);\n    });\n});\n\n"],"names":["__extends","this","VectorContext","CanvasBuilder","createTransform","composeTransform","applyTransform","transformSetFromArray","BuilderType","Executor","iconImageCache","getIconImage","CanvasImmediateRenderer","Icon","transformToString","intersectsExtent","defaultRenderOrder","wrapCoordinateX","wrapExtentX","getRenderTolerance","getSquaredRenderTolerance","ExecutorGroup","CanvasVectorLayerRenderer","VectorLayer"],"mappings":"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"}